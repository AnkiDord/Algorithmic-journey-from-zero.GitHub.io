# 题目描述
# 判断一个链表是否是环形链表

# 快慢指针

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: ListNode) -> bool:
        if not head or not head.next:
            return False
        fast = head.next
        slow = head

        while fast != slow:
            if not fast or not fast.next:
                return False
            slow = slow.next
            fast = fast.next.next

        return fast
# 时间复杂度：O(N)
# 空间复杂度：O(1)

