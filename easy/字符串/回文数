# 题目描述
# 给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。
# 回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。例如，121 是回文，而 123 不是。


# x为偶数长度比较x前一半数字和后一般数字是否相等，x为奇数长度时x前一半和后一半//10比较是否相等
class Solution:
    def isPalindrome(self, x: int) -> bool:
        if x < 0 or (x % 10 == 0 and x != 0):
            return False
        else:
            front = 0
            while x > front:
                front = front * 10 + x % 10
                x = x // 10

            return x == front or x == front // 10

# 时间复杂度：O(logN)对于每次迭代，我们会将输入除以 1010，因此时间复杂度为 O(\log n)O(logn)
# 空间复杂度：O(1)
