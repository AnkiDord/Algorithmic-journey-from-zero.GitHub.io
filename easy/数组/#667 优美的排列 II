# 题目描述
# 见力扣

# 暴力解法：没看懂？？？？？？？



# 构造
# 当k=n-1的时候构造出的数组为[1, n, 2, n-1, 3, n-2, ...],需要1与n相邻，然后需要n-2的差异以此类推
# 当k=1时构造出的数组为[1, 2, 3, 4, ..., n]
# 当k为其它情况时，我们把k=1和k=n-1的情况结合起来，先构造k=1时的序列[1, 2, ..., n-k-1]，
# 在构造k+1个序列[n-k, n-k+1, n-k+2, ..., n]顺序，用k=n-1插序方法，最后相结合
class Solution:
    def constructArray(self, n: int, k: int) -> List[int]:
        arr = [i+1 for i in range(n-k-1)]
        for i in range(n-k,n+1):
           arr.append(i)
           arr.append(2*n-k-i)

        return arr[0:n]

# 时间复杂度：O(N),N=K+1
# 空间复杂度：O(N),N为数组长度
# 插叙数组每次添加一对在k=n-1数组中每两个相邻元素相加和为n+1,已知i即可知道相邻数字
# 由于每次添加一对后k+1个数就添加了2k+2个元素，k=1时有n-k-1个元素所有最后一共有n+k+1个元素
# 输出时取前n个即可，没找到新的方法来完美插叙






