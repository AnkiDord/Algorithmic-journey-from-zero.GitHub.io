# 题目描述
# 给你一个链表数组，每个链表都已经按升序排列。请你将所有链表合并到一个升序链表中，返回合并后的链表。

# 示例1
# 输入：lists = [[1,4,5],[1,3,4],[2,6]]
# 输出：[1,1,2,3,4,4,5,6]
# 解释：链表数组如下：
# [1->4->5,
#   1->3->4,
#   2->6]
# 将它们合并到一个有序链表中得到。
# 1->1->2->3->4->4->5->6

# 示例2
# 输入：lists = []
# 输出：[]

# 示例3
# 输入：lists = [[]]
# 输出：[]

# 暴力解法，将链表中的值放到列表之中，对其排序，在将列表元素放入到链表之中
class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        if not lists or len(lists) == 0:
            return []

       # import heapq
        all_vals = []
        for i in lists:
            while i:
                all_vals.append(i.val())  # val的作用是返回数字部分
                i = i.next

        all_vals.sort()
        lists_null = ListNode(None)
        cur = lists_null

        for i in all_vals:
            temp_node = ListNode(i)
            cur.next = temp_node
            cur = temp_node

        return lists_null.next

# 空间复杂度：
# 时间复杂度：

# 第二种方法优先队列 栈？

# 分治法 要学会分治法？
